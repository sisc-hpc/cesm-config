Sync the local input data folder with the remote iRODS server in the archival step
author: Alex Domingo (Vrije Universiteit Brussel)
diff -W 126 -Nru cesm-2.1.3-orig/cime/config/cesm/machines/config_workflow.xml cesm-2.1.3/cime/config/cesm/machines/config_workflow.xml
--- a/cime/config/cesm/machines/config_workflow.xml	2020-08-14 22:11:22.305950000 +0200
+++ b/cime/config/cesm/machines/config_workflow.xml	2020-08-15 10:46:48.984021000 +0200
@@ -45,7 +45,7 @@
       <runtime_parameters>
 	<task_count>1</task_count>
 	<tasks_per_node>1</tasks_per_node>
-	<walltime>0:20:00</walltime>
+	<walltime>12:00:00</walltime>
       </runtime_parameters>
     </job>
   </workflow_jobs>
diff -W 126 -Nru cesm-2.1.2-orig/cime/config/cesm/machines/template.st_archive cesm-2.1.2/cime/config/cesm/machines/template.st_archive
--- a/cime/config/cesm/machines/template.st_archive	2020-08-14 22:05:57.824547000 +0200
+++ b/cime/config/cesm/machines/template.st_archive	2020-08-14 23:47:21.828084000 +0200
@@ -17,6 +17,8 @@
 
 from standard_script_setup          import *
 from CIME.case import Case
+from CIME.utils import run_cmd
+from CIME.XML.inputdata import Inputdata
 
 logger = logging.getLogger(__name__)
 
@@ -89,6 +91,23 @@
                                            archive_incomplete_logs=not no_incomplete_logs,
                                            copy_only=copy_only, resubmit=resubmit)
 
+        # Upload any new input files to iRODS
+        inputdata = Inputdata()
+        protocol = None
+        while protocol != 'irods':
+            protocol, address, _, _, _ = inputdata.get_next_server()
+
+        irods_sync_cmd = "irsync -K -r {} {}".format(case.get_value('DIN_LOC_ROOT'), address)
+        logging.info("Synchronizing local inputdata to iRODS: %s ...\n", irods_sync_cmd)
+        stat, output, errput = run_cmd(irods_sync_cmd)
+        if (stat != 0):
+            logging.warning(
+                "irsync failed with output: {} and errput {}\n".format(output.encode('utf-8'), errput.encode('utf-8'))
+            )
+        else:
+            logging.info("Synchronization completed successfully\n")
+            logging.debug("%s\n", output)
+
     sys.exit(0 if success else 1)
 
 ###############################################################################
